name: Run tests
on:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
  merge_group: {}
  workflow_call: {}
jobs:
  lint:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      checks: write
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Lint backend
        uses: nebularg/actions-luacheck@v1
        with:
          path: backend
          annotate: error
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: lts/*
          check-latest: true
          cache: npm
          cache-dependency-path: frontend/package-lock.json
      - name: Install Node.js dependencies
        run: npm ci
        working-directory: frontend
      - name: Run linters
        uses: wearerequired/lint-action@v2
        with:
          eslint: true
          eslint_dir: frontend
          eslint_extensions: js,jsx,ts,tsx
          prettier: true
          prettier_dir: frontend/src
  e2etests:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      checks: write
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      # Setup Docker
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      # Setup build cache
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-single-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-single-buildx
      - name: Ensure we are up to date on all images
        run: docker pull node:lts-alpine && docker pull openresty/openresty:alpine-fat
      - name: Build container image
        uses: docker/build-push-action@v4
        with:
          push: false
          load: true
          builder: ${{ steps.buildx.outputs.name }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new
          build-args: |
            GIT_REVISION=${{ github.sha }}
          tags: |
            foxcaves-container
      - name: Add to hostsfile
        run: sudo bash -c "echo '127.0.0.1 main.foxcaves short.foxcaves' >> /etc/hosts"
      - name: Run test container
        run: docker run --name=foxcaves-${{ github.sha }} --add-host=postgres:host-gateway --add-host=redis:host-gateway -p 127.0.0.1:8080:80 -e ENVIRONMENT=testing -d foxcaves-container
      - name: Run some basic tests
        run: |
          set -ex
          HTTP_GET='curl -XGET -m 5 -s -f -I'
          timeout 30s bash -c "until $HTTP_GET http://main.foxcaves:8080/api/v1/system/info; do sleep 1; done" || true
          $HTTP_GET http://main.foxcaves:8080/files
          $HTTP_GET http://main.foxcaves:8080/api/v1/system/info
      - name: Run browser tests
        run: |
          set -ex
          cd frontend
          npm ci
          npx playwright install chromium --with-deps
          npx playwright test
      # https://github.com/docker/build-push-action/issues/252 (prevent cache from growing indefinitely)
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
      - name: Test container teardown
        if: always()
        run: |
          docker stop foxcaves-${{ github.sha }}
          docker logs foxcaves-${{ github.sha }}
          docker rm foxcaves-${{ github.sha }}
